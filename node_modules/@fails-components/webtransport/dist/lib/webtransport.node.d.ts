export const quicheLoaded: Promise<any>;
/**
 * @typedef {import('./dom').WebTransportCloseInfo} WebTransportCloseInfo
 * @typedef {import('./dom').WebTransportBidirectionalStream} WebTransportBidirectionalStream
 * @typedef {import('./dom').WebTransportReceiveStream} WebTransportReceiveStream
 */
/**
 * @template T
 * @typedef {import('node:stream/web').ReadableStream<T>} ReadableStream<T>
 */
/**
 * @typedef {import('./dom').WebTransport} WebTransportInterface
 *
 * @implements {WebTransportInterface}
 */
export class WebTransport extends WebTransportBase implements WebTransportInterface {
}
export type WebTransportCloseInfo = import('./dom').WebTransportCloseInfo;
export type WebTransportBidirectionalStream = import('./dom').WebTransportBidirectionalStream;
export type WebTransportReceiveStream = import('./dom').WebTransportReceiveStream;
/**
 * <T>
 */
export type ReadableStream<T> = import('node:stream/web').ReadableStream<T>;
export type WebTransportInterface = import('./dom').WebTransport;
import { WebTransportBase } from "./webtransportbase.js";
//# sourceMappingURL=webtransport.node.d.ts.map