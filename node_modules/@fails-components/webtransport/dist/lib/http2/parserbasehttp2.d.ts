/// <reference types="node" />
/**
 * @typedef {import('node:http2').Http2Stream} Http2Stream
 */
/**
 * @param{{offset: Number, buffer: Buffer, size: Number}} bs
 */
export function readUint32(bs: {
    offset: number;
    buffer: Buffer;
    size: number;
}): number | undefined;
/**
 * @param{{offset: Number, buffer: Buffer, size: Number}} bs
 */
export function readVarInt(bs: {
    offset: number;
    buffer: Buffer;
    size: number;
}): bigint | undefined;
/**
 * @param{{offset: Number, buffer: Buffer, size: Number}} bs
 * @param{Number|bigint} int
 */
export function writeVarInt(bs: {
    offset: number;
    buffer: Buffer;
    size: number;
}, int: number | bigint): void;
export class ParserBaseHttp2 extends ParserBase {
    /**
     * @param {import('../types').ParserHttp2Init} stream
     */
    constructor({ stream, nativesession, isclient, initialStreamSendWindowOffsetBidi, initialStreamSendWindowOffsetUnidi, initialStreamReceiveWindowOffset, streamShouldAutoTuneReceiveWindow, streamReceiveWindowSizeLimit }: import('../types').ParserHttp2Init);
    stream: import("http2").Http2Stream;
}
export type Http2Stream = import('node:http2').Http2Stream;
import { ParserBase } from "./parserbase.js";
//# sourceMappingURL=parserbasehttp2.d.ts.map